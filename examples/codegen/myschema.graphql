scalar UUID

extend schema
  @source(
    name: "frank_api"
    http: {baseURL: "$config.brains", headers: [{name: "Bad", from: "Boo", value: "$config.meat"}]}
  )

"""
User Model
"""
type User @db_sql {
  id: UUID! @field_meta(primary_key: true)
  name: String
  email: String
  quota: [Quota!] @field_meta(args: ["id"])
  overQuota(resource: String!): Quota @field_meta(where: "user_id = :id AND resource = :resource", args: ["id"])
}

input userCreate {
  name: String!
  email: String!
}

input userModify {
  id: ID!
  name: String
  email: String
}

type Quota @db_sql(table_name: "quota") {
  user_id: UUID! @field_meta(foreign_key: "users.id")
  user: User
  resource: String
  limit: Int
  count: Int
  products(id: String!): [Product]
    @connect(
      source: "frank_api"
      http: {GET: "/products", headers: [{name: "Authorization", value: "$config.black"}]}
      selection: "$.products[] { id name price }"
    )
    @field_meta(args: ["user_id"])
}

type Product {
  id: ID!
  name: String
  price: Int
}

type Query {
  people: [User]
}

type Mutation {
  createPerson(user: userCreate!): User
  updatePerson(user: userModify!): User
}
