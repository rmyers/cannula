scalar UUID

"""
User Model

---
metadata:
  db_table: users
"""
type User {
  "@metadata(primary_key: true)"
  id: UUID!
  name: String
  email: String
  "@metadata(args: id)"
  quota: [Quota!]
  """
  ---
  metadata:
    where: "user_id = :id AND resource = :resource"
    args:
      - id
  """
  overQuota(resource: String!): Quota
}

"@metadata(db_table: quota)"
type Quota {
  "@metadata(foreign_key: users.id)"
  user_id: UUID!
  """
  User that this quota is for.
  ---
  metadata:
    relation:
       back_populates: quota
       where: user.id == :id
  """
  user: User
  resource: String
  limit: Int
  count: Int
}

type Query {
  people: [User]
}
